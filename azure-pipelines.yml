trigger:
  - main

variables:
  DOCKER_NAMESPACE: hira054
  TAG: $(Build.BuildId)

stages:
  - stage: Build
    displayName: 'Build and Push Images'
    jobs:
      - job: BuildAndPush
        displayName: 'Build and Push Services'
        pool:
          name: 'Default'
        steps:
          - task: Docker@2
            displayName: 'Build and Push Vote App'
            inputs:
              containerRegistry: 'MY-DockerHub-Connection'
              repository: '$(DOCKER_NAMESPACE)/voting-app-vote'
              command: 'buildAndPush'
              Dockerfile: 'vote/Dockerfile'
              tags: |
                $(TAG)
                latest

          - task: Docker@2
            displayName: 'Build and Push Result App'
            inputs:
              containerRegistry: 'MY-DockerHub-Connection'
              repository: '$(DOCKER_NAMESPACE)/voting-app-result'
              command: 'buildAndPush'
              Dockerfile: 'result/Dockerfile'
              tags: |
                $(TAG)
                latest

  - stage: Deploy
    displayName: 'Deploy to AKS'
    jobs:
      - job: Deploy
        displayName: 'Deploying Services to AKS'
        pool:
          name: 'Default'
        steps:
          - checkout: self
            persistCredentials: true
            clean: true

          - script: ls -R $(Build.SourcesDirectory)
            displayName: 'Debug: List all files in working directory'

          - task: KubernetesManifest@0
            displayName: 'Deploy Kubernetes Manifests'
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'MY-Kubernetes-Connection'
              namespace: 'default'
              manifests: |
                $(Build.SourcesDirectory)/k8s-specifications/db-deployment.yaml
                $(Build.SourcesDirectory)/k8s-specifications/db-service.yaml
                $(Build.SourcesDirectory)/k8s-specifications/redis-deployment.yaml
                $(Build.SourcesDirectory)/k8s-specifications/redis-service.yaml
                $(Build.SourcesDirectory)/k8s-specifications/result-deployment.yaml
                $(Build.SourcesDirectory)/k8s-specifications/result-service.yaml
                $(Build.SourcesDirectory)/k8s-specifications/vote-deployment.yaml
                $(Build.SourcesDirectory)/k8s-specifications/vote-service.yaml
                $(Build.SourcesDirectory)/k8s-specifications/worker-deployment.yaml
              imagePullSecrets: 'MY-DockerHub-Connection'
